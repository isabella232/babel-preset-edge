// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Transpile: Modern alias 1`] = `
"import { Button } from \\"../../src/components/button/Button\\";
import { logx } from \\"../../src/testonly\\";
import \\"src/testonly\\";
logx(Button);"
`;

exports[`Transpile: Modern alias.tsx 1`] = `
"import { Button } from \\"../../src/components/button/Button\\";
import { logx } from \\"../../src/testonly\\";
import 'src/testonly';
logx(Button);"
`;

exports[`Transpile: Modern comments 1`] = `
"import _camelCase from \\"lodash/camelCase\\";

function translate(value) {
  return _camelCase(value);
}"
`;

exports[`Transpile: Modern deadcode 1`] = `
"const STATIC = false;
before();
after();"
`;

exports[`Transpile: Modern es2015: classes 1`] = `
"export class Component extends Other {
  constructor() {
    super();
    this.flag = true;
  }

  main() {
    alert(this.foo);
  }

}"
`;

exports[`Transpile: Modern es2015: for_off 1`] = `
"import \\"core-js/modules/web.dom-collections.iterator\\";

function test() {
  for (const taskName of tasks) {
    try {
      executeCommands();
    } catch (error) {
      console.error(\\"Error\\");
    }
  }
}"
`;

exports[`Transpile: Modern es2015: generator 1`] = `
"function* idMaker() {
  var index = 0;

  while (true) yield index++;
}"
`;

exports[`Transpile: Modern es2015: set 1`] = `
"import \\"core-js/modules/web.dom-collections.iterator\\";
new Set([1, 2, 3]);"
`;

exports[`Transpile: Modern es2016: exponentiation 1`] = `"var result = 2 ** 3;"`;

exports[`Transpile: Modern esnext: async 1`] = `
"import \\"core-js/modules/es.promise\\";

async function wait() {
  await loadData();
}"
`;

exports[`Transpile: Modern esnext: async_loop 1`] = `
"import \\"core-js/modules/es.promise\\";
import \\"core-js/modules/web.dom-collections.iterator\\";

async function executeTasks(tasks) {
  for (const taskName of tasks) {
    try {
      await executeCommands();
    } catch (error) {
      console.error(\\"Error\\");
    }
  }
}"
`;

exports[`Transpile: Modern esnext: catch_bind 1`] = `
"try {
  throw 0;
} catch (_unused) {
  doSomethingWhichDoesntCareAboutTheValueThrown();
} finally {
  doSomeCleanup();
}"
`;

exports[`Transpile: Modern esnext: class properties 1`] = `
"export class Component {
  constructor() {
    this.onClick = () => {};
  }

}"
`;

exports[`Transpile: Modern esnext: decorators 1`] = `
"var _class;

let MyClass = annotation(_class = class MyClass {}) || _class;

function annotation(target) {
  target.annotated = true;
}"
`;

exports[`Transpile: Modern esnext: dynamic import 1`] = `
"import \\"core-js/modules/es.promise\\";
import(
/*webpackChunkName:'lodash-wBYk8'*/
\\"lodash\\").then(lodash => {
  console.log(lodash.camelCase(\\"hello world\\"));
});"
`;

exports[`Transpile: Modern esnext: object spread 1`] = `
"import \\"core-js/modules/es.object.assign\\";
let original = {
  bar: 10
},
    variant = Object.assign({
  foo: 1
}, original);"
`;

exports[`Transpile: Modern loadable 1`] = `
"import \\"core-js/modules/es.promise\\";
import loadable from \\"@loadable/component\\";
export const Home = loadable({
  resolved: {},

  chunkName() {
    return \\"Home-JfPYC\\";
  },

  isReady(props) {
    if (this.resolved[key] === false) {
      return false;
    }

    if (typeof __webpack_modules__ != 'undefined') {
      return !!__webpack_modules__[key];
    }

    return false;
  },

  importAsync: () => import(
  /* webpackChunkName: \\"Home-JfPYC\\" */
  \\"./views/Home\\"),

  requireAsync(props) {
    this.resolved[key] = false;
    return this.importAsync(props).then(resolved => {
      this.resolved[key] = true;
      return resolved;
    });
  },

  requireSync(props) {
    const id = this.resolve(props);

    if (typeof __webpack_require__ != 'undefined') {
      return __webpack_require__(id);
    }

    return eval('module.require')(id);
  },

  resolve() {
    if (require.resolveWeak) {
      return require.resolveWeak(\\"./views/Home\\");
    }

    return eval('require.resolve')(\\"./views/Home\\");
  }

});
export const About = loadable({
  resolved: {},

  chunkName() {
    return \\"About-8yDxR\\";
  },

  isReady(props) {
    if (this.resolved[key] === false) {
      return false;
    }

    if (typeof __webpack_modules__ != 'undefined') {
      return !!__webpack_modules__[key];
    }

    return false;
  },

  importAsync: () => import(
  /* webpackChunkName: \\"About-8yDxR\\" */
  \\"./views/About\\"),

  requireAsync(props) {
    this.resolved[key] = false;
    return this.importAsync(props).then(resolved => {
      this.resolved[key] = true;
      return resolved;
    });
  },

  requireSync(props) {
    const id = this.resolve(props);

    if (typeof __webpack_require__ != 'undefined') {
      return __webpack_require__(id);
    }

    return eval('module.require')(id);
  },

  resolve() {
    if (require.resolveWeak) {
      return require.resolveWeak(\\"./views/About\\");
    }

    return eval('require.resolve')(\\"./views/About\\");
  }

});
export const Contact = loadable({
  resolved: {},

  chunkName() {
    return \\"Contact-AIf6m\\";
  },

  isReady(props) {
    if (this.resolved[key] === false) {
      return false;
    }

    if (typeof __webpack_modules__ != 'undefined') {
      return !!__webpack_modules__[key];
    }

    return false;
  },

  importAsync: () => import(
  /* webpackChunkName: \\"Contact-AIf6m\\" */
  \\"./views/Contact\\"),

  requireAsync(props) {
    this.resolved[key] = false;
    return this.importAsync(props).then(resolved => {
      this.resolved[key] = true;
      return resolved;
    });
  },

  requireSync(props) {
    const id = this.resolve(props);

    if (typeof __webpack_require__ != 'undefined') {
      return __webpack_require__(id);
    }

    return eval('module.require')(id);
  },

  resolve() {
    if (require.resolveWeak) {
      return require.resolveWeak(\\"./views/Contact\\");
    }

    return eval('require.resolve')(\\"./views/Contact\\");
  }

});"
`;

exports[`Transpile: Modern loadable magic-comments 1`] = `
"import \\"core-js/modules/es.promise\\";
import loadable from \\"@loadable/component\\";
export const Home = loadable({
  resolved: {},

  chunkName() {
    return \\"Home-JfPYC\\";
  },

  isReady(props) {
    if (this.resolved[key] === false) {
      return false;
    }

    if (typeof __webpack_modules__ != 'undefined') {
      return !!__webpack_modules__[key];
    }

    return false;
  },

  importAsync: () => import(
  /* webpackChunkName: \\"Home-JfPYC\\" */
  \\"./views/Home\\"),

  requireAsync(props) {
    this.resolved[key] = false;
    return this.importAsync(props).then(resolved => {
      this.resolved[key] = true;
      return resolved;
    });
  },

  requireSync(props) {
    const id = this.resolve(props);

    if (typeof __webpack_require__ != 'undefined') {
      return __webpack_require__(id);
    }

    return eval('module.require')(id);
  },

  resolve() {
    if (require.resolveWeak) {
      return require.resolveWeak(\\"./views/Home\\");
    }

    return eval('require.resolve')(\\"./views/Home\\");
  }

});
export const About = loadable({
  resolved: {},

  chunkName() {
    return \\"About\\";
  },

  isReady(props) {
    if (this.resolved[key] === false) {
      return false;
    }

    if (typeof __webpack_modules__ != 'undefined') {
      return !!__webpack_modules__[key];
    }

    return false;
  },

  importAsync: () => import(
  /* webpackChunkName: \\"About\\" */
  \\"./views/About\\"),

  requireAsync(props) {
    this.resolved[key] = false;
    return this.importAsync(props).then(resolved => {
      this.resolved[key] = true;
      return resolved;
    });
  },

  requireSync(props) {
    const id = this.resolve(props);

    if (typeof __webpack_require__ != 'undefined') {
      return __webpack_require__(id);
    }

    return eval('module.require')(id);
  },

  resolve() {
    if (require.resolveWeak) {
      return require.resolveWeak(\\"./views/About\\");
    }

    return eval('require.resolve')(\\"./views/About\\");
  }

});
export const Contact = loadable({
  resolved: {},

  chunkName() {
    return \\"Contact-AIf6m\\";
  },

  isReady(props) {
    if (this.resolved[key] === false) {
      return false;
    }

    if (typeof __webpack_modules__ != 'undefined') {
      return !!__webpack_modules__[key];
    }

    return false;
  },

  importAsync: () => import(
  /* webpackMode: \\"lazy\\", webpackFoo: \\"bar\\", webpackChunkName: \\"Contact-AIf6m\\" */
  \\"./views/Contact\\"),

  requireAsync(props) {
    this.resolved[key] = false;
    return this.importAsync(props).then(resolved => {
      this.resolved[key] = true;
      return resolved;
    });
  },

  requireSync(props) {
    const id = this.resolve(props);

    if (typeof __webpack_require__ != 'undefined') {
      return __webpack_require__(id);
    }

    return eval('module.require')(id);
  },

  resolve() {
    if (require.resolveWeak) {
      return require.resolveWeak(\\"./views/Contact\\");
    }

    return eval('require.resolve')(\\"./views/Contact\\");
  }

});"
`;

exports[`Transpile: Modern loadable wildcard 1`] = `
"import \\"core-js/modules/es.promise\\";
import \\"core-js/modules/es.string.replace\\";
import loadable from \\"@loadable/component\\";
const page = \\"About\\",
      lang = \\"de_DE\\";
export const views = loadable({
  resolved: {},

  chunkName() {
    return (\\"views-\\" + page).replace(/[^a-zA-Z0-9_!§$()=\\\\-^°]+/g, \\"-\\");
  },

  isReady(props) {
    if (this.resolved[key] === false) {
      return false;
    }

    if (typeof __webpack_modules__ != 'undefined') {
      return !!__webpack_modules__[key];
    }

    return false;
  },

  importAsync: () => import(
  /* webpackChunkName: \\"views-[request]\\" */
  \\"./views/\\" + page),

  requireAsync(props) {
    this.resolved[key] = false;
    return this.importAsync(props).then(resolved => {
      this.resolved[key] = true;
      return resolved;
    });
  },

  requireSync(props) {
    const id = this.resolve(props);

    if (typeof __webpack_require__ != 'undefined') {
      return __webpack_require__(id);
    }

    return eval('module.require')(id);
  },

  resolve() {
    if (require.resolveWeak) {
      return require.resolveWeak(\\"./views/\\" + page);
    }

    return eval('require.resolve')(\\"./views/\\" + page);
  }

});
export const leanIntlData = loadable({
  resolved: {},

  chunkName() {
    return (\\"lean-intl-locale-data-\\" + lang).replace(/[^a-zA-Z0-9_!§$()=\\\\-^°]+/g, \\"-\\");
  },

  isReady(props) {
    if (this.resolved[key] === false) {
      return false;
    }

    if (typeof __webpack_modules__ != 'undefined') {
      return !!__webpack_modules__[key];
    }

    return false;
  },

  importAsync: () => import(
  /* webpackChunkName: \\"lean-intl-locale-data-[request]\\" */
  \\"./lean-intl/locale-data/\\" + lang),

  requireAsync(props) {
    this.resolved[key] = false;
    return this.importAsync(props).then(resolved => {
      this.resolved[key] = true;
      return resolved;
    });
  },

  requireSync(props) {
    const id = this.resolve(props);

    if (typeof __webpack_require__ != 'undefined') {
      return __webpack_require__(id);
    }

    return eval('module.require')(id);
  },

  resolve() {
    if (require.resolveWeak) {
      return require.resolveWeak(\\"./lean-intl/locale-data/\\" + lang);
    }

    return eval('require.resolve')(\\"./lean-intl/locale-data/\\" + lang);
  }

});
export const reactIntlData = loadable({
  resolved: {},

  chunkName() {
    return (\\"react-intl-locale-data-\\" + lang).replace(/[^a-zA-Z0-9_!§$()=\\\\-^°]+/g, \\"-\\");
  },

  isReady(props) {
    if (this.resolved[key] === false) {
      return false;
    }

    if (typeof __webpack_modules__ != 'undefined') {
      return !!__webpack_modules__[key];
    }

    return false;
  },

  importAsync: () => import(
  /* webpackChunkName: \\"react-intl-locale-data-[request]\\" */
  \\"./react-intl/locale-data/\\" + lang),

  requireAsync(props) {
    this.resolved[key] = false;
    return this.importAsync(props).then(resolved => {
      this.resolved[key] = true;
      return resolved;
    });
  },

  requireSync(props) {
    const id = this.resolve(props);

    if (typeof __webpack_require__ != 'undefined') {
      return __webpack_require__(id);
    }

    return eval('module.require')(id);
  },

  resolve() {
    if (require.resolveWeak) {
      return require.resolveWeak(\\"./react-intl/locale-data/\\" + lang);
    }

    return eval('require.resolve')(\\"./react-intl/locale-data/\\" + lang);
  }

});"
`;

exports[`Transpile: Modern lodash: async 1`] = `
"import _parallel from \\"async/parallel\\";

_parallel([]);"
`;

exports[`Transpile: Modern lodash: lodash 1`] = `
"import _camelCase from \\"lodash/camelCase\\";

_camelCase(\\"hello world\\");"
`;

exports[`Transpile: Modern lodash: recompose 1`] = `
"import _compose from \\"recompose/compose\\";

_compose([]);"
`;

exports[`Transpile: Modern macro: gql 1`] = `
"const query = {
  kind: \\"Document\\",
  definitions: [{
    kind: \\"OperationDefinition\\",
    operation: \\"query\\",
    name: {
      kind: \\"Name\\",
      value: \\"User\\"
    },
    variableDefinitions: [],
    directives: [],
    selectionSet: {
      kind: \\"SelectionSet\\",
      selections: [{
        kind: \\"Field\\",
        name: {
          kind: \\"Name\\",
          value: \\"user\\"
        },
        arguments: [{
          kind: \\"Argument\\",
          name: {
            kind: \\"Name\\",
            value: \\"id\\"
          },
          value: {
            kind: \\"IntValue\\",
            value: \\"5\\"
          }
        }],
        directives: [],
        selectionSet: {
          kind: \\"SelectionSet\\",
          selections: [{
            kind: \\"Field\\",
            name: {
              kind: \\"Name\\",
              value: \\"lastName\\"
            },
            arguments: [],
            directives: []
          }, {
            kind: \\"FragmentSpread\\",
            name: {
              kind: \\"Name\\",
              value: \\"UserEntry1\\"
            },
            directives: []
          }]
        }
      }]
    }
  }],
  loc: {
    start: 0,
    end: 79,
    source: {
      body: \\"\\\\n  query User {\\\\n    user(id: 5) {\\\\n      lastName\\\\n      ...UserEntry1\\\\n    }\\\\n  }\\\\n\\",
      name: \\"GraphQL request\\",
      locationOffset: {
        line: 1,
        column: 1
      }
    }
  }
};"
`;

exports[`Transpile: Modern macro: preval 1`] = `"const one = 1;"`;

exports[`Transpile: Modern promise 1`] = `
"import \\"core-js/modules/es.promise\\";
export default function () {
  return new Promise(resolve => {
    return resolve(42);
  });
}"
`;

exports[`Transpile: Modern react: jsx 1`] = `
"function render() {
  return React.createElement(\\"h1\\", null, \\"Hello\\");
}"
`;

exports[`Transpile: Modern react: jsx spread 1`] = `
"import \\"core-js/modules/es.object.assign\\";

function render(props) {
  return React.createElement(\\"h1\\", Object.assign({
    className: \\"large\\"
  }, props), \\"Hello\\");
}"
`;

exports[`Transpile: Modern require context 1`] = `
"if (process.env.NODE_ENV === \\"test\\") {
  require(\\"babel-plugin-require-context-hook/register\\")();
}

const loader = require.context(__dirname, false, /\\\\.js/);"
`;

exports[`Transpile: Modern typescript.tsx 1`] = `
"export const hasPackageConfig = name => {
  try {
    return !!getPackageConfig()[name];
  } catch (_) {
    return false;
  }
};"
`;
